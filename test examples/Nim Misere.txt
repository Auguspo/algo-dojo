To determine the winner of the Misère Nim game, given the number of stones in each pile, and assuming both players move optimally, the algorithm needs to follow these steps:

Calculate the nim-sum of the number of stones in each pile. This is done by performing an XOR operation on the number of stones in each pile.
If the nim-sum is zero, the second player wins. Print "Second".
If the nim-sum is not zero, check if all piles have only one stone. If so, the first player wins. Print "First".
If the nim-sum is not zero and there is at least one pile with more than one stone, the winner depends on whether the number of stones in each pile is the same. If they are all the same, the first player wins. Print "First". If they are not all the same, the second player wins. Print "Second".
This algorithm ensures that the winner is correctly determined based on the rules of the Misère Nim game.

'use strict';

const fs = require('fs');

process.stdin.resume();
process.stdin.setEncoding('utf-8');

let inputString = '';
let currentLine = 0;

process.stdin.on('data', function (inputStdin) {
    inputString += inputStdin;
});

process.stdin.on('end', function () {
    inputString = inputString.split('\n');

    main();
});

function readLine() {
    return inputString[currentLine++];
}

/*
 * Complete the 'misereNim' function below.
 *
 * The function is expected to return a STRING.
 * The function accepts INTEGER_ARRAY s as parameter.
 */

function misereNim(s) {
    let totalXOR = 0;
    let total = 0;

    s.forEach(stones => {
        totalXOR ^= stones;
        total += stones;
    });

    if (s.length % 2 === 0) {
        return (s.length !== total && totalXOR === 0) ? "Second" : "First";
    } else {
        return (s.length === total || totalXOR === 0) ? "Second" : "First";
    }
}
function main() {
    const ws = fs.createWriteStream(process.env.OUTPUT_PATH);

    const t = parseInt(readLine().trim(), 10);

    for (let tItr = 0; tItr < t; tItr++) {
        const n = parseInt(readLine().trim(), 10);

        const s = readLine().replace(/\s+$/g, '').split(' ').map(sTemp => parseInt(sTemp, 10));

        const result = misereNim(s);

        ws.write(result + '\n');
    }

    ws.end();
}
